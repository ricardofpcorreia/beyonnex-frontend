{"ast":null,"code":"var _jsxFileName = \"/Users/ricardocorreia/Code/beyonnex-frontend/src/components/TemperatureGauge.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../styles/TemperatureGauge.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TemperatureGauge = ({\n  initialMinTemp,\n  initialMaxTemp,\n  initialCurrentTemp\n}) => {\n  _s();\n  const [minTemp, setMinTemp] = useState(initialMinTemp);\n  const [maxTemp, setMaxTemp] = useState(initialMaxTemp);\n  const [currentTemp, setCurrentTemp] = useState(initialCurrentTemp);\n  const getRotationDegrees = (min, max, current) => {\n    const range = max - min;\n    const relativeValue = current - min;\n    return relativeValue / range * 180 - 90;\n  };\n  const needleStyle = {\n    transform: `rotate(${getRotationDegrees(minTemp, maxTemp, currentTemp)}deg)`,\n    transformOrigin: '50% 100%'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"thermostat-display\",\n    children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n      className: \"thermostat-svg\",\n      viewBox: \"0 0 36 18\",\n      children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n        cx: \"18\",\n        cy: \"18\",\n        r: \"17.5\",\n        fill: \"none\",\n        stroke: \"#333\",\n        strokeWidth: \"1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n        x1: \"1\",\n        y1: \"18\",\n        x2: \"4\",\n        y2: \"18\",\n        stroke: \"#333\",\n        strokeWidth: \"0.5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n        x1: \"32\",\n        y1: \"18\",\n        x2: \"35\",\n        y2: \"18\",\n        stroke: \"#333\",\n        strokeWidth: \"0.5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n        className: \"needle\",\n        x1: \"18\",\n        y1: \"1\",\n        x2: \"18\",\n        y2: \"18\",\n        style: needleStyle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"temperature-display\",\n      children: [currentTemp, \"\\xB0C\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Min Temp:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: minTemp,\n          onChange: e => setMinTemp(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Max Temp:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: maxTemp,\n          onChange: e => setMaxTemp(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Current Temp:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: currentTemp,\n          onChange: e => setCurrentTemp(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 7\n  }, this);\n};\n_s(TemperatureGauge, \"lM2xFD2JpdsIt7S2HO0iph7M63M=\");\n_c = TemperatureGauge;\nexport default TemperatureGauge;\nvar _c;\n$RefreshReg$(_c, \"TemperatureGauge\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TemperatureGauge","initialMinTemp","initialMaxTemp","initialCurrentTemp","_s","minTemp","setMinTemp","maxTemp","setMaxTemp","currentTemp","setCurrentTemp","getRotationDegrees","min","max","current","range","relativeValue","needleStyle","transform","transformOrigin","className","children","viewBox","cx","cy","r","fill","stroke","strokeWidth","fileName","_jsxFileName","lineNumber","columnNumber","x1","y1","x2","y2","style","type","value","onChange","e","target","_c","$RefreshReg$"],"sources":["/Users/ricardocorreia/Code/beyonnex-frontend/src/components/TemperatureGauge.js"],"sourcesContent":["import React, { useState } from 'react';\nimport '../styles/TemperatureGauge.css';\n\nconst TemperatureGauge = ({ initialMinTemp, initialMaxTemp, initialCurrentTemp }) => {\n\n    const [minTemp, setMinTemp] = useState(initialMinTemp);\n    const [maxTemp, setMaxTemp] = useState(initialMaxTemp);\n    const [currentTemp, setCurrentTemp] = useState(initialCurrentTemp);\n\n    const getRotationDegrees = (min, max, current) => {\n      const range = max - min;\n      const relativeValue = current - min;\n      return (relativeValue / range) * 180 - 90;\n    };\n\n    const needleStyle = {\n      transform: `rotate(${getRotationDegrees(minTemp, maxTemp, currentTemp)}deg)`,\n      transformOrigin: '50% 100%'\n    };\n  \n    return (\n      <div className='thermostat-display'>\n        <svg className='thermostat-svg' viewBox='0 0 36 18'>\n\n          <circle cx='18' cy='18' r='17.5' fill='none' stroke='#333' strokeWidth='1' />\n\n          <line x1='1' y1='18' x2='4' y2='18' stroke='#333' strokeWidth='0.5' />\n          <line x1='32' y1='18' x2='35' y2='18' stroke='#333' strokeWidth='0.5' />\n\n          <line className='needle' x1='18' y1='1' x2='18' y2='18' style={needleStyle} />\n        </svg>\n        <div className='temperature-display'>{currentTemp}Â°C</div>\n        <div className='controls'>\n          <label>\n            Min Temp:\n            <input type='number' value={minTemp} onChange={(e) => setMinTemp(e.target.value)} />\n          </label>\n          <label>\n            Max Temp:\n            <input type='number' value={maxTemp} onChange={(e) => setMaxTemp(e.target.value)} />\n          </label>\n          <label>\n            Current Temp:\n            <input type='number' value={currentTemp} onChange={(e) => setCurrentTemp(e.target.value)} />\n          </label>\n        </div>\n      </div>\n    );\n  };\n  \n  export default TemperatureGauge;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}