{"ast":null,"code":"var _jsxFileName = \"/Users/ricardocorreia/Code/beyonnex-frontend/src/components/TemperatureGauge.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst mapTemperatureToAngle = (min, max, current) => {\n  const angleRange = 270;\n  const temperatureRange = max - min;\n  const normalizedTemperature = current - min;\n  return normalizedTemperature / temperatureRange * angleRange - 135;\n};\nconst TemperatureGauge = ({\n  minTemp,\n  maxTemp\n}) => {\n  _s();\n  const [currentTemp, setCurrentTemp] = useState((minTemp + maxTemp) / 2);\n  const angle = mapTemperatureToAngle(minTemp, maxTemp, currentTemp);\n  const handleTemperatureChange = event => {\n    const newTemp = Math.min(maxTemp, Math.max(minTemp, event.target.value));\n    setCurrentTemp(newTemp);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      fontFamily: 'Arial',\n      textAlign: 'center',\n      width: '200px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n      width: \"200\",\n      height: \"100\",\n      viewBox: \"0 0 200 100\",\n      children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n        cx: \"100\",\n        cy: \"100\",\n        r: \"80\",\n        stroke: \"black\",\n        strokeWidth: \"2\",\n        fill: \"transparent\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n        x1: \"100\",\n        y1: \"100\",\n        x2: \"100\",\n        y2: \"20\",\n        stroke: \"black\",\n        strokeWidth: \"2\",\n        transform: `rotate(${angle} 100 100)`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n        x1: \"20\",\n        y1: \"100\",\n        x2: \"40\",\n        y2: \"100\",\n        stroke: \"red\",\n        strokeWidth: \"2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n        x1: \"160\",\n        y1: \"100\",\n        x2: \"180\",\n        y2: \"100\",\n        stroke: \"blue\",\n        strokeWidth: \"2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [currentTemp, \"\\xB0C\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"range\",\n      min: minTemp,\n      max: maxTemp,\n      value: currentTemp,\n      onChange: handleTemperatureChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(TemperatureGauge, \"mXE/NoAHf2vri0zYdGEjaD5SwWw=\");\n_c = TemperatureGauge;\nexport default TemperatureGauge;\nvar _c;\n$RefreshReg$(_c, \"TemperatureGauge\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","mapTemperatureToAngle","min","max","current","angleRange","temperatureRange","normalizedTemperature","TemperatureGauge","minTemp","maxTemp","_s","currentTemp","setCurrentTemp","angle","handleTemperatureChange","event","newTemp","Math","target","value","style","fontFamily","textAlign","width","children","height","viewBox","cx","cy","r","stroke","strokeWidth","fill","fileName","_jsxFileName","lineNumber","columnNumber","x1","y1","x2","y2","transform","type","onChange","_c","$RefreshReg$"],"sources":["/Users/ricardocorreia/Code/beyonnex-frontend/src/components/TemperatureGauge.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst mapTemperatureToAngle = (min, max, current) => {\n  const angleRange = 270;\n  const temperatureRange = max - min;\n  const normalizedTemperature = current - min;\n  return (normalizedTemperature / temperatureRange) * angleRange - 135;\n};\n\nconst TemperatureGauge = ({ minTemp, maxTemp }) => {\n  const [currentTemp, setCurrentTemp] = useState((minTemp + maxTemp) / 2);\n\n  const angle = mapTemperatureToAngle(minTemp, maxTemp, currentTemp);\n\n  const handleTemperatureChange = (event) => {\n    const newTemp = Math.min(maxTemp, Math.max(minTemp, event.target.value));\n    setCurrentTemp(newTemp);\n  };\n\n  return (\n    <div style={{ fontFamily: 'Arial', textAlign: 'center', width: '200px' }}>\n      <svg width=\"200\" height=\"100\" viewBox=\"0 0 200 100\">\n        <circle cx=\"100\" cy=\"100\" r=\"80\" stroke=\"black\" strokeWidth=\"2\" fill=\"transparent\" />\n        <line x1=\"100\" y1=\"100\" x2=\"100\" y2=\"20\" stroke=\"black\" strokeWidth=\"2\"\n          transform={`rotate(${angle} 100 100)`} />\n        <line x1=\"20\" y1=\"100\" x2=\"40\" y2=\"100\" stroke=\"red\" strokeWidth=\"2\" />\n        <line x1=\"160\" y1=\"100\" x2=\"180\" y2=\"100\" stroke=\"blue\" strokeWidth=\"2\" />\n      </svg>\n      <div>{currentTemp}Â°C</div>\n      <input \n        type=\"range\" \n        min={minTemp} \n        max={maxTemp} \n        value={currentTemp} \n        onChange={handleTemperatureChange} \n      />\n    </div>\n  );\n};\n\nexport default TemperatureGauge;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}